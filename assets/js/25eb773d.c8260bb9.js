"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[840],{5726:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=i(5893),s=i(1151);const o={},r="Uploading an image to to a bucket in a Generic S3 server",c={id:"on-premises/uploading-to-generic-s3",title:"Uploading an image to to a bucket in a Generic S3 server",description:"osbuild-composer provides the users with a convenient way to upload images, of all sorts, directly to a bucket in a Generic S3 server right after the image is built.",source:"@site/docs/on-premises/uploading-to-generic-s3.md",sourceDirName:"on-premises",slug:"/on-premises/uploading-to-generic-s3",permalink:"/docs/on-premises/uploading-to-generic-s3",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/on-premises/uploading-to-generic-s3.md",tags:[],version:"current",frontMatter:{},sidebar:"onPremises",previous:{title:"Uploading an image to GCP",permalink:"/docs/on-premises/uploading-to-gcp"},next:{title:"Uploading an image to OCI",permalink:"/docs/on-premises/uploading-to-oci"}},a={},l=[];function d(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"uploading-an-image-to-to-a-bucket-in-a-generic-s3-server",children:"Uploading an image to to a bucket in a Generic S3 server"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"osbuild-composer"})," provides the users with a convenient way to upload images, of all sorts, directly to a bucket in a Generic S3 server right after the image is built."]}),"\n",(0,t.jsx)(n.p,{children:"Using a text editor of your choice, create a configuration file with the following content:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'provider = "generic.s3"\n\n[settings]\nendpoint = "S3_SERVER_ENDPOINT"\naccessKeyID = "S3_ACCESS_KEY_ID"\nsecretAccessKey = "S3_SECRET_ACCESS_KEY"\nbucket = "S3_BUCKET"\nregion = "S3_REGION"\nkey = "OBJECT_KEY"\n'})}),"\n",(0,t.jsx)(n.p,{children:"There are several considerations when filling values in this file:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AWS_REGION"})," must still be set (e.g. to us-east-1) even if it has no meaning in your S3 server"]}),"\n",(0,t.jsxs)(n.li,{children:["If your server is using HTTPS with a certificate signed by your own CA, you can either pass the CA bundle by setting the field ",(0,t.jsx)(n.code,{children:"ca_bundle"}),", pointing it to the CA's public certificate, or skip SSL verification by setting ",(0,t.jsx)(n.code,{children:"skip_ssl_verification"})," to ",(0,t.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Once everything is configured, you can trigger a compose as usual with additional image name and cloud provider profile:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ sudo composer-cli compose start base-image-with-tmux qcow2 IMAGE_KEY generic-s3-config.toml\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>r});var t=i(7294);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);